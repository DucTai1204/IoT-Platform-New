version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    restart: always

  mysql:
    image: mysql:5.7
    container_name: mysql
    ports:
      - "3312:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: iot_data
      MYSQL_USER: iot
      MYSQL_PASSWORD: iot123
    restart: always

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always

  fastapi-backend:
    build:
      context: ./fastapi_backend
    container_name: fastapi_backend
    ports:
      - "8000:8000"
    depends_on:
      - mongodb
      - mysql
      - redis
    restart: unless-stopped
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  mqtt-to-kafka:
    build:
      context: ./mqtt_to_kafka
    container_name: mqtt_to_kafka
    restart: unless-stopped

  spark-processor:
    build:
      context: ./spark_jobs
    container_name: spark_processor
    depends_on:
      - kafka
      - mongodb
      - mysql
    restart: unless-stopped
    
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: mqtt
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt_server/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro

  grafana:
    image: grafana/grafana:9.5.1              # <-- LÙI VỀ PHIÊN BẢN 9
    container_name: grafana
    restart: always
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=mongodb-community-datasource # <-- GIỮ NGUYÊN TÊN PLUGIN NÀY
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - mongodb

volumes:
  grafana-storage: