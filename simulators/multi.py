import json
import time
import random
import threading
import paho.mqtt.client as mqtt

MQTT_BROKER = "localhost"
MQTT_PORT = 1883

ROOM_CODE = "13edc6c57df2421fbbc4c5f8265ccb9f"   # m√£ ph√≤ng, kh·ªõp DB
DEVICE_ID = "b6c203a59ed04a40b2f4741e17e3a3ea"   # ƒë·ªïi id cho m·ªói node

TOPIC_DATA = f"iot/{ROOM_CODE}/data"
TOPIC_CMD = f"iot/{ROOM_CODE}/cmd/{DEVICE_ID}"
TOPIC_STATUS = f"iot/{ROOM_CODE}/status/{DEVICE_ID}"

# ==== X·ª≠ l√Ω khi nh·∫≠n l·ªánh ====
def on_message(client, userdata, msg):
    payload = json.loads(msg.payload.decode())
    command = payload.get("command")
    print(f"‚ö° {DEVICE_ID} nh·∫≠n l·ªánh: {command}, payload={payload}")

    # ph·∫£n h·ªìi tr·∫°ng th√°i
    status_payload = {"device_id": DEVICE_ID, "status": f"executed {command}", "ts": time.time()}
    client.publish(TOPIC_STATUS, json.dumps(status_payload))
    print(f"üì§ {DEVICE_ID} g·ª≠i tr·∫°ng th√°i ‚Üí {TOPIC_STATUS}: {status_payload}")

# ==== Kh·ªüi t·∫°o MQTT ====
client = mqtt.Client()
client.on_message = on_message
client.connect(MQTT_BROKER, MQTT_PORT, 60)

client.subscribe(TOPIC_CMD)
print(f"üì° {DEVICE_ID} ƒëang l·∫Øng nghe {TOPIC_CMD}...")

# ==== Thread gi·∫£ l·∫≠p g·ª≠i d·ªØ li·ªáu c·∫£m bi·∫øn ====
def send_data():
    while True:
        temp = random.randint(25, 36)
        payload = {"device_id": DEVICE_ID, "data": {"temp": temp}}
        client.publish(TOPIC_DATA, json.dumps(payload))
        print(f"üå°Ô∏è {DEVICE_ID} g·ª≠i d·ªØ li·ªáu ‚Üí {TOPIC_DATA}: {payload}")
        time.sleep(5)

threading.Thread(target=send_data, daemon=True).start()

# ==== Loop ch√≠nh ====
client.loop_forever()
