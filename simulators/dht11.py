import time
import json
import random
import paho.mqtt.client as mqtt

# --- C·∫•u h√¨nh ---
BROKER = "192.168.69.159"
# BROKER = "127.0.0.1"
PORT  = 1883
ROOM  = "13edc6c57df2421fbbc4c5f8265ccb9f"
DEVICE_ID = "b6c203a59ed04a40b2f4741e17e3a3ea"

# Kh·ªüi t·∫°o client v·ªõi API v2 ƒë·ªÉ tr√°nh c·∫£nh b√°o (warning)
client = mqtt.Client(mqtt.CallbackAPIVersion.VERSION2)

def publish_sensor_data():
    """
    V√≤ng l·∫∑p v√¥ h·∫°n ƒë·ªÉ t·∫°o v√† g·ª≠i d·ªØ li·ªáu c·∫£m bi·∫øn.
    """
    while True:
        # 1. Gom d·ªØ li·ªáu sensor v√†o m·ªôt dictionary con
        sensor_values = {
            "temp": random.randint(20, 35),
            "hum": random.randint(40, 80)
        }

        # 2. T·∫°o payload v·ªõi c·∫•u tr√∫c l·ªìng nhau ƒë√∫ng nh∆∞ server mong mu·ªën
        payload = {
            "device_id": DEVICE_ID,    # <-- Key ph·∫£i l√† "device_id"
            "data": sensor_values      # <-- D·ªØ li·ªáu sensor n·∫±m trong key "data"
        }
        
        topic = f"iot/{ROOM}/data"
        
        # Chuy·ªÉn dictionary th√†nh chu·ªói JSON v√† g·ª≠i ƒëi
        client.publish(topic, json.dumps(payload))
        
        print(f"üì° SENSOR {DEVICE_ID} ‚Üí {topic}: {payload}")
        time.sleep(5)

# --- Ch·∫°y ch∆∞∆°ng tr√¨nh ---
try:
    print("Connecting to MQTT Broker...")
    client.connect(BROKER, PORT, 60)
    
    # B·∫Øt ƒë·∫ßu m·ªôt lu·ªìng ri√™ng ƒë·ªÉ x·ª≠ l√Ω m·∫°ng cho MQTT (c√°ch l√†m t·ªët nh·∫•t)
    client.loop_start() 
    
    # B·∫Øt ƒë·∫ßu g·ª≠i d·ªØ li·ªáu
    publish_sensor_data()

except KeyboardInterrupt:
    print("\nScript stopped by user.")
    client.loop_stop()
    client.disconnect()
except Exception as e:
    print(f"An error occurred: {e}")